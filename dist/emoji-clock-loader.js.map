{"version":3,"sources":["../emoji-clock-loader.js"],"names":["ClockLoader","options","el","clocks","speed","Error","document","querySelector","start","innerText","window","setInterval","tick","bind","nextClockIndex","indexOf","length","nextClock"],"mappings":";;;;;;;;;;IAAqBA,W;AACnB,uBAAaC,OAAb,EAAsB;AAAA;;AACpB,QAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,gBAAU;AACRC,YAAID;AADI,OAAV;AAGD;;AAEDA,cAAUA,WAAW,EAArB;AACAA,YAAQE,MAAR,KAAmBF,QAAQE,MAAR,GAAiB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,CAApC;AACAF,YAAQG,KAAR,KAAkBH,QAAQG,KAAR,GAAgB,IAAlC;;AAEA,QAAI,CAACH,QAAQC,EAAb,EAAiB;AACf,YAAM,IAAIG,KAAJ,CAAU,+CAAV,CAAN;AACA;AACD;;AAED,SAAKH,EAAL,GAAUI,SAASC,aAAT,CAAuBN,QAAQC,EAA/B,CAAV;AACA,SAAKD,OAAL,GAAeA,OAAf;;AAEA,SAAKO,KAAL;AACD;;;;4BAEQ;AACP,WAAKN,EAAL,CAAQO,SAAR,GAAoB,KAAKR,OAAL,CAAaE,MAAb,CAAoB,CAApB,CAApB;AACAO,aAAOC,WAAP,CAAmB,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAnB,EAAyC,KAAKZ,OAAL,CAAaG,KAAtD;AACD;;;2BAEO;AACN,UAAID,SAAS,KAAKF,OAAL,CAAaE,MAA1B;AACA,UAAIW,iBAAiBX,OAAOY,OAAP,CAAe,KAAKb,EAAL,CAAQO,SAAvB,IAAoC,CAAzD;;AAEA,UAAIK,kBAAkBX,OAAOa,MAA7B,EAAqC;AACnCF,yBAAiB,CAAjB;AACD;;AAED,UAAIG,YAAYd,OAAOW,cAAP,CAAhB;;AAEA,WAAKZ,EAAL,CAAQO,SAAR,GAAoBQ,SAApB;AACD;;;;;;kBAvCkBjB,W","file":"emoji-clock-loader.js","sourcesContent":["export default class ClockLoader {\n  constructor (options) {\n    if (typeof options === 'string') {\n      options = {\n        el: options\n      }\n    }\n\n    options = options || {}\n    options.clocks || (options.clocks = ['🕛', '🕐', '🕑', '🕒', '🕓', '🕔', '🕕', '🕖', '🕗', '🕘', '🕙', '🕚'])\n    options.speed || (options.speed = 1000)\n\n    if (!options.el) {\n      throw new Error('ClockLoader must receive an element selector.')\n      return\n    }\n\n    this.el = document.querySelector(options.el)\n    this.options = options\n\n    this.start()\n  }\n\n  start () {\n    this.el.innerText = this.options.clocks[0]\n    window.setInterval(this.tick.bind(this), this.options.speed)\n  }\n\n  tick () {\n    let clocks = this.options.clocks\n    let nextClockIndex = clocks.indexOf(this.el.innerText) + 1\n\n    if (nextClockIndex >= clocks.length) {\n      nextClockIndex = 0\n    }\n\n    let nextClock = clocks[nextClockIndex]\n\n    this.el.innerText = nextClock\n  }\n}\n"]}